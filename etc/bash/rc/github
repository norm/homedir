# ~/etc/bash/rc/github
# -*- Mode: Bash; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
#
# working with github

function github-repo-create {
    local        name=$1
    local description=$2
    local         url=$3
    local      public=${4:-1}
    
    if [ -z "${name}" ]; then
        echo "Usage: github-repo-create 'name' ['desc' 'url' 'public']"
        return
    fi
    
    local error=$( 
        curl -s                                                 \
            -F login=`git config github.user`                   \
            -F token=`git config github.token`                  \
            -F "name=${name}"                                   \
            -F "description=${description}"                     \
            -F "homepage=${url}"                                \
            -F "public=${public}"                               \
                'http://github.com/api/v2/json/repos/create'    \
        | jsontidy                                              \
        | grep '"error" : "'
    )
    
    [ -z "$error" ] \
        && return 0
    
    print                                   \
        "${bold}${red}Error:"               \
        ${error##         \"error\" : }     \
        ${reset}
    return 1
}

function github-start {
    local opt_p=''
    
    if [ "$1" = '-p' ]; then
        opt_p='-p'
        shift
    fi
    
    local name=$1
    shift
    
    github-repo-create ${name} "$@"
    git-start ${opt_p} ${name} README.markdown github.com norm
}

function github-clone {
    local  option=0
    local    move=0
    local    code=0
    local private=0
    local  method='git://'
    local     sep='/' 
    local  OPTIND=0
    
    while getopts "cmp" option; do
        case $option in
            c)  code=1 ;;
            m)  move=1 ;;
            p)  private=1 ;;
        esac
    done
    shift $(( OPTIND - 1 ))
    
    local user="$1"
    local repo="$2"
    
    # shortcut for checking out in my most common location
    if [ 1 = $code ]; then
        cd $HOME/Code
    fi
    
    # if no repo given, assume it is owned by me already
    if [ -z "${repo}" ]; then
        user=`git config github.user`
        repo="$1"
    fi
    
    # pass -p flag at the end to enable a private
    # checkout, even for someone else's repository
    if [ 1 = $private ]; then
        method='git@'
           sep=':'
    fi
    
    git clone "${method}github.com${sep}${user}/${repo}.git"
    
    if [ 1 = $move ]; then
        mv "$repo" "${user}-${repo}"
    fi
}

function github-open {
    local     origin=`git config remote.origin.url`
    local match_repo="git[:@/]+github.com[:/](.*)\.git" 
    
    if [[ $origin =~ $match_repo ]]; then
        open "http://github.com/${BASH_REMATCH[1]}"
    else
        echo "Not in a github repository."
    fi
}
