# github:norm:homedir:etc/bash/rc/aws-hosts
# -*- Mode: Bash; tab-width: 4; indent-tabs-mode: nil; -*-
#
#       Working with AWS Elastic Compute Cloud hosts.

# spin up a new instance and reconfigure it suitably
function ec2-new-host {
    local type=${1:-ubuntu}
    
    # create a new ubuntu-based host
    ec2-spinup ${type}
    
    # set it up
    ec2-setup-new-${type}-host
    
    echo ''
    echo "instance: ${ami_instance}"
    echo "ip addr:  ${ami_ip}"
}

# the steps needed to turn a stock ubuntu image into something ready for use
function ec2-setup-new-ubuntu-host {
    local ip_addr=${1:-$ami_ip}
    
    ssh ubuntu@${ip_addr} <<END
        # create main user account
        sudo adduser --disabled-password \
                     --gecos 'Mark Norman Francis,,,' norm;
        sudo mkdir ~norm/.ssh;
        sudo cp .ssh/authorized_keys ~norm/.ssh;
        sudo chown -R norm ~norm;
        
        sudo perl -pi.bak -e 's{^ubuntu}{norm}' /etc/sudoers
END
    
    # copy homedir project to new host
    home ${ip_addr}
    
    local keyfile='/etc/ssh/ssh_host_rsa_key.pub'
    local keygen="ssh-keygen -l -f ${keyfile} | logger -s -t 'ec2'"
    
    ssh ${ip_addr} <<END
        # update the environment
        sudo locale-gen en_GB.UTF-8;
        sudo /usr/sbin/update-locale LANG=en_GB.UTF-8;
        
        # clean up
        sudo deluser ubuntu;
        
        # fix access
        sudo perl -pi.bak                                       \
            -e 's{PermitRootLogin yes}{PermitRootLogin no}'     \
            /etc/ssh/sshd_config;
        sudo /etc/init.d/ssh reload;
        
        # update the software
        sudo apt-get update;
        echo y | sudo aptitude safe-upgrade;
        echo y | sudo aptitude full-upgrade;
        
        # add keychain fingerprint logging to /etc/rc.local
        sudo sed -e 's:exit 0::' /etc/rc.local > /tmp/rc.local;
        sudo echo 'echo ""' >> /tmp/rc.local
        sudo echo 'echo "** SSH FINGERPRINT **"' >> /tmp/rc.local
        sudo echo "$keygen" >> /tmp/rc.local
        sudo echo 'chmod 1777 /tmp' >> /tmp/rc.local
        sudo echo 'exit 0' >> /tmp/rc.local
        
        sudo mv /tmp/rc.local /etc/rc.local
        sudo chown root /etc/rc.local 
        sudo chmod 744 /etc/rc.local
END
}

function ec2-setup-encrypted-filesystems {
    local ip_addr=${1:-$ami_ip}
    
    ssh ${ip_addr} <<END
        sudo apt-get install -y cryptsetup xfsprogs
        for i in sha256 dm_crypt xfs; do 
            sudo modprobe $i
            echo $i | sudo tee -a /etc/modules
        done
END
}
