#!/bin/bash
# github:norm:homedir:bin/licence
# -*- Mode: Bash; tab-width: 4; indent-tabs-mode: nil; -*-
#
#       Tool to access licence keys kept in an encrypted disk image.

source ${HOME}/etc/bash/function/00.output

 DISK_IMAGE="${LICENCE_DISK_IMAGE:-${HOME}/Documents/Keys.sparsebundle}"
MOUNT_POINT="${LICENCE_MOUNT_POINT:-/Volumes/Keys}"

copy_to_clipboard=0
        edit_file=0
      eject_after=1
        show_help=0

while getopts "cehn" option; do
    case $option in
        e)  edit_file=1 ;;
        h)  show_help=1 ;;
        n)  eject_after=0 ;;
        c)  copy_to_clipboard=1 ;;
    esac
done
shift $(( OPTIND - 1 ))

if [ 1 = $show_help ]; then
    perldoc $0
    exit
fi

while [ ! -d $MOUNT_POINT ]; do
    status_line "Attempting to open image..."
    open ${DISK_IMAGE}
    sleep 2
done
empty_status_line

case "$1" in
    new)    if [ -n "$2" ]; then
                shift
                status_line 'Enter licence key...'
                sleep 2
                empty_status_line
                
                cat > "${MOUNT_POINT}/$*.txt"
            else
                open ${MOUNT_POINT}
                eject_after=0
            fi
            ;;
            
    '')     eject_after=0
	    ;;

    *)      tmp_file=$( mktemp /tmp/licence_lookup.XXXXX )
            cd ${MOUNT_POINT}
            find *                                  \
                | grep -i "${1:-xxx}"               \
                | sed -e 's:^:open ":' -e 's:$:":'  \
                    > ${tmp_file} 2> /dev/null
            
            # if result is a single text file, and we're not
            # supposed to edit it, just cat it to stdout
            if [ 0 = $edit_file ]; then
                  lines=$( wc -l ${tmp_file} | awk '{ print $1 }' )
                is_text=$( grep '.txt"$' ${tmp_file} )
            
                if [ 1 = ${lines} -a -n "${is_text}" ]; then
                    find *                                      \
                        | grep -i $1                            \
                        | sed -e 's:^:cat ":' -e 's:$:":'       > ${tmp_file}
                fi
            fi
            
            if [ 1 = ${copy_to_clipboard} ]; then
                bash $tmp_file | pbcopy
            else
                /bin/bash $tmp_file
            fi
            cd - >/dev/null
            
            ;;
esac

if [ 1 = $eject_after ]; then
    while [ -d $MOUNT_POINT ]; do
        status_then_run \
            hdiutil eject ${MOUNT_POINT} >/dev/null
    done
fi

exit 0

<<POD

=head1 NAME

licence - Access licence keys stored in a disk image

=head1 SYNOPSIS

licence [-n] [-e] [-p] [new] [<software name>]

=head1 DESCRIPTION

This program automates storing and retrieving files from a disk image,
automatically mounting and unmounting it. 

If the disk image is encrypted and passworded, you will be prompted for the
password. This can be further automated by keeping the password for the 
disk image in the Keychain, although this will decrease security.

Whilst the program was conceived as a lookup for software licence keys, it
is in no way limited to them.

=head1 OPTIONS

=over

=item -n

Do not unmount the disk image afterwards. 

=item -e

If there is only one matching licence, and it is a text file, open it in
your text editor.

=item -c

If there is only one matching licence, and it is a text file, copy the 
contents of the file into the clipboard.

=item new

Create a new licence key, rather than searching for existing ones. The key
details are taken from STDIN and saved to a text file named 
C<software name.txt>, as defined by the remaining arguments.

If you wish to store a file (some software uses image-based licence keys or
XML files rather than a simple textual string), run C<licence> without any
arguments to open the mounted volume instead (no arguments implies -n).

=item <software name>

In combination with the C<new> argument, names the new text licence file.

Without C<new>, is a case-insensitive substring to match against stored 
licence keys. For example, C<licence windows> will find any stored keys 
with the word 'windows' in the filename, including such files as 
C<Windows XP.txt> and/or C<Newsleecher (Windows).txt>.

=back

=head1 ENVIRONMENT

Two environment variables can be set to alter the workings of this program:

=over

=item LICENCE_DISK_IMAGE

The disk image to open that contains the licence key files. Defaults to
F<~/Documents/Keys.sparsebundle>.

=item LICENCE

=back

=cut

POD
